SQL Exercise 1 
 
1. Create the table SEMP with the following structure:-
mysql> CREATE TABLE SEMP (
    ->     EMPNO CHAR(4),
    ->     EMPNAME CHAR(20),
    ->     BASIC FLOAT,
    ->     DEPTNO CHAR(2),
    ->     DEPTHEAD CHAR(4)
    -> );
Query OK, 0 rows affected (0.03 sec)


2. Create the table SDEPT with the following structure:-
mysql> CREATE TABLE SDEPT (
    ->     DEPTNO CHAR(2),
    ->     DEPTNAME CHAR(15)
    -> );
Query OK, 0 rows affected (0.02 sec)


3. Insert into the SDEPT table the following values:- 
 
10, Development 
20, Training
mysql> INSERT INTO SDEPT (DEPTNO, DEPTNAME) VALUES
    -> ('10', 'Development'),
    -> ('20', 'Training');
Query OK, 2 rows affected (0.01 sec)
Records: 2  Duplicates: 0  Warnings: 0

4. Insert into the SEMP table the following values:- 
 
0001, SUNIL, 6000, 10 
0002, HIREN, 8000, 20 
0003, ALI, 4000, 10, 0001 
0004, GEORGE, 6000, 0002

mysql> INSERT INTO SEMP (EMPNO, EMPNAME, BASIC, DEPTNO, DEPTHEAD) VALUES
    -> ('0001', 'SUNIL', 6000, '10', NULL),
    -> ('0002', 'HIREN', 8000, '20', NULL),
    -> ('0003', 'ALI', 4000, '10', '0001'),
    -> ('0004', 'GEORGE', 6000, '20', '0002');
Query OK, 4 rows affected (0.01 sec)
Records: 4  Duplicates: 0  Warnings: 0


Create S, P, J, SPJ tables as specified below and insert a few rows in each table:- 
SUPPLIER 
(S#, Sname, Status, City) 
- S 
 PARTS 
(P#, Pname, Color, Weight, City) 
- P 
 PROJECTS 
(J#, Jname, City) 
- J 
 SUPPLIER-PARTS-PROJECT 
(S#, P#, J#, Qty) 
 
- SPJ 
Sample data for S# column:- ‘S1’, ‘S2’, ‘S3’, etc. 
Sample data for P# column:- ‘P1’, ‘P2’, ‘P3’, etc. 
Sample data for J# column:- ‘J1’, ‘J2’, ‘J3’, etc. 
Sample data for Status column:- 10, 20, 30, etc. 
 
Write the SELECT queries to do the following:-
mysql> CREATE TABLE S (
    ->     `S#` VARCHAR(2) PRIMARY KEY,
    ->     Sname VARCHAR(20),
    ->     Status INT,
    ->     City VARCHAR(20)
    -> );
Query OK, 0 rows affected (0.05 sec)

mysql> CREATE TABLE P (
    ->     `P#` VARCHAR(2) PRIMARY KEY,
    ->     Pname VARCHAR(20),
    ->     Color VARCHAR(10),
    ->     Weight FLOAT,
    ->     City VARCHAR(20)
    -> );
Query OK, 0 rows affected (0.03 sec)

mysql> CREATE TABLE J (
    ->     `J#` VARCHAR(2) PRIMARY KEY,
    ->     Jname VARCHAR(20),
    ->     City VARCHAR(20)
    -> );
Query OK, 0 rows affected (0.02 sec)

mysql> CREATE TABLE SPJ (
    ->     `S#` VARCHAR(2),
    ->     `P#` VARCHAR(2),
    ->     `J#` VARCHAR(2),
    ->     Qty INT,
    ->     PRIMARY KEY (`S#`, `P#`, `J#`),
    ->     FOREIGN KEY (`S#`) REFERENCES S(`S#`),
    ->     FOREIGN KEY (`P#`) REFERENCES P(`P#`),
    ->     FOREIGN KEY (`J#`) REFERENCES J(`J#`)
    -> );
Query OK, 0 rows affected (0.05 sec)

mysql> INSERT INTO S (`S#`, Sname, Status, City) VALUES
    -> ('S1', 'Supplier1', 10, 'London'),
    -> ('S2', 'Supplier2', 20, 'Paris'),
    -> ('S3', 'Supplier3', 30, 'Athens');
Query OK, 3 rows affected (0.01 sec)
Records: 3  Duplicates: 0  Warnings: 0

mysql> INSERT INTO P (`P#`, Pname, Color, Weight, City) VALUES
    -> ('P1', 'Part1', 'Red', 12.5, 'London'),
    -> ('P2', 'Part2', 'Blue', 14.0, 'Berlin'),
    -> ('P3', 'Part3', 'Green', 13.0, 'Paris');
Query OK, 3 rows affected (0.01 sec)
Records: 3  Duplicates: 0  Warnings: 0

mysql> INSERT INTO J (`J#`, Jname, City) VALUES
    -> ('J1', 'Project1', 'Athens'),
    -> ('J2', 'Project2', 'London'),
    -> ('J3', 'Project3', 'Paris');
Query OK, 3 rows affected (0.01 sec)
Records: 3  Duplicates: 0  Warnings: 0

mysql> INSERT INTO SPJ (`S#`, `P#`, `J#`, Qty) VALUES
    -> ('S1', 'P1', 'J1', 100),
    -> ('S2', 'P2', 'J2', 200),
    -> ('S3', 'P3', 'J3', 300);
Query OK, 3 rows affected (0.01 sec)
Records: 3  Duplicates: 0  Warnings: 0


5. Display all the data from the S table
mysql> SELECT * FROM S;
+----+-----------+--------+--------+
| S# | Sname     | Status | City   |
+----+-----------+--------+--------+
| S1 | Supplier1 |     10 | London |
| S2 | Supplier2 |     20 | Paris  |
| S3 | Supplier3 |     30 | Athens |
+----+-----------+--------+--------+
3 rows in set (0.01 sec)

6. Display only the S# and SNAME fields from the S table
mysql> SELECT `S#`, Sname FROM S;
+----+-----------+
| S# | Sname     |
+----+-----------+
| S1 | Supplier1 |
| S2 | Supplier2 |
| S3 | Supplier3 |
+----+-----------+
3 rows in set (0.00 sec)

7. Display the PNAME and COLOR from the P table for the CITY=”London”
mysql> SELECT Pname, Color FROM P WHERE City = 'London';
+-------+-------+
| Pname | Color |
+-------+-------+
| Part1 | Red   |
+-------+-------+
1 row in set (0.00 sec)

 
8. Display all the Suppliers from London
mysql> SELECT * FROM S WHERE City = 'London';
+----+-----------+--------+--------+
| S# | Sname     | Status | City   |
+----+-----------+--------+--------+
| S1 | Supplier1 |     10 | London |
+----+-----------+--------+--------+
1 row in set (0.00 sec)

 
9. Display all the Suppliers from Paris or Athens
mysql> SELECT * FROM S WHERE City IN ('Paris', 'Athens');
+----+-----------+--------+--------+
| S# | Sname     | Status | City   |
+----+-----------+--------+--------+
| S2 | Supplier2 |     20 | Paris  |
| S3 | Supplier3 |     30 | Athens |
+----+-----------+--------+--------+
2 rows in set (0.00 sec)

 
10. Display all the Projects in Athens
mysql> SELECT * FROM J WHERE City = 'Athens';
+----+----------+--------+
| J# | Jname    | City   |
+----+----------+--------+
| J1 | Project1 | Athens |
+----+----------+--------+
1 row in set (0.00 sec)

11. Display all the Partnames with the weight between 12 and 14 (inclusive of both)
mysql> SELECT Pname FROM P WHERE Weight BETWEEN 12 AND 14;
+-------+
| Pname |
+-------+
| Part1 |
| Part2 |
| Part3 |
+-------+
3 rows in set (0.00 sec)

12. Display all the Suppliers with a Status greater than or equal to 20
mysql> SELECT * FROM S WHERE Status >= 20;
+----+-----------+--------+--------+
| S# | Sname     | Status | City   |
+----+-----------+--------+--------+
| S2 | Supplier2 |     20 | Paris  |
| S3 | Supplier3 |     30 | Athens |
+----+-----------+--------+--------+
2 rows in set (0.00 sec)

13. Display all the Suppliers except the Suppliers from London.

mysql> SELECT * FROM S WHERE City <> 'London';
+----+-----------+--------+--------+
| S# | Sname     | Status | City   |
+----+-----------+--------+--------+
| S2 | Supplier2 |     20 | Paris  |
| S3 | Supplier3 |     30 | Athens |
+----+-----------+--------+--------+
2 rows in set (0.00 sec)

14. Display only the Cities from where the Suppliers come from
mysql> SELECT DISTINCT City FROM S;
+--------+
| City   |
+--------+
| London |
| Paris  |
| Athens |
+--------+
3 rows in set (0.01 sec)

15. Assuming that the Part Weight is in GRAMS, display the same in 
MILLIGRAMS and KILOGRAMS.mysql> SELECT Pname, Weight AS Weight_in_Grams,
    ->        Weight * 1000 AS Weight_in_Milligrams,
    ->        Weight / 1000 AS Weight_in_Kilograms
    -> FROM P;
+-------+-----------------+----------------------+---------------------+
| Pname | Weight_in_Grams | Weight_in_Milligrams | Weight_in_Kilograms |
+-------+-----------------+----------------------+---------------------+
| Part1 |            12.5 |                12500 |              0.0125 |
| Part2 |              14 |                14000 |               0.014 |
| Part3 |              13 |                13000 |               0.013 |
+-------+-----------------+----------------------+---------------------+
3 rows in set (0.00 sec)

